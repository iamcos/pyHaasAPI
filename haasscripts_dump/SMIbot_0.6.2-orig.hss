-- [huluvublue]
-- SMIbot0.6.2
-- bc1pmygwepesljqk87ccvnvglv07ak5t80xw9ffxaq9ah20vjtvt5vcq9kpa5z

function SMIErgodicOscillator(shortPeriod, longPeriod, signalPeriod, maType, source)
    local tsi = TSI(source, shortPeriod, longPeriod)
    local signal = MA(tsi, signalPeriod, maType) 
    return tsi, signal
end

-- Inputs
local shortPeriod = Input('Short Period', 5, '')
local longPeriod = Input('Long Period', 20, '')
local signalPeriod = Input('Signal Period', 5, '')
local maType = InputMaTypes('Moving Average Type', EmaType, '') 
local allowLongs = Input('Allow Long Positions', true, 'bool')
local allowShorts = Input('Allow Short Positions', true, 'bool')
local prices = ClosePrices()

-- Get the SMI Ergodic Oscillator and Signal line
local oscillator, signalLine = SMIErgodicOscillator(shortPeriod, longPeriod, signalPeriod, maType, prices)

-- Plot the indicator
Plot(1, 'Oscillator', oscillator, 'fuchsia')
Plot(1, 'Signal Line', signalLine, 'orange')

-- Plot the histogram
local histogram = oscillator - signalLine
local histoPlot = Plot(1, "Histogram", histogram, Gray)
PlotHistogram(histoPlot, Maroon, true)  

-- Trading Logic
local currentPosition = GetPositionDirection()

if CrossOver(oscillator, signalLine) then
    -- Buy when oscillator crosses above the signal line
    if currentPosition ~= PositionLong and allowLongs then
        DoBuy('Go long')
    elseif currentPosition == PositionShort then
        DoExitPosition('Exit short position')
    end
elseif CrossUnder(oscillator, signalLine) then
    -- Go short when oscillator crosses below the signal line
    if currentPosition ~= PositionShort and allowShorts then
        DoShort('Go short')
    elseif currentPosition == PositionLong then
        DoExitPosition('Exit long position')
    end
end

local profit = GetBotProfit()
Plot(2, "PnL", profit, 'green')
Plot(2, "", 0, 'white')

