-- Donchian Channel + MACD
-- Developed by pshai


-- ======================
-- Inputs
local macd_fastPeriod = Input('MACD Fast Period', 12)
local macd_slowPeriod = Input('MACD Slow Period', 26)
local macd_signPeriod = Input('MACD Signal Period', 9)
local dc_period = Input('Donchian Channel Period', 20)

-- ======================
-- Price source
local source = ClosePrices()

-- ======================
-- MACD
local macdValues = MACD(source, macd_fastPeriod, macd_slowPeriod, macd_signPeriod)
local macdFast = macdValues.macd

-- ======================
-- Donchian Channel
local dcValues = DONCHIAN(macdFast, macdFast, dc_period)
local dcUpper = dcValues.upper
local dcLower = dcValues.lower
local dcMid = dcValues.middle

-- ======================
-- Plot charts
local dcup = Plot(1, 'Upper', dcUpper, SkyBlue)
local dcdn = Plot(1, 'Lower', dcLower, SkyBlue)
PlotBands(dcup, dcdn, SkyBlue(2))
Plot(1, 'MACD', macdFast, Red)
Plot(1, 'Mid', dcMid, Orange)

-- ======================
-- Trading logic
local pushDirection = Load('pd', 0)

 -- We pushed down, check if macd starts to move up
if pushDirection == -1 then
    if macdFast[1] > macdFast[2] and macdFast[2] > macdFast[3] then
        DoLong()
    end
-- We pushed up, check if macd starts to move down
elseif pushDirection == 1 then
    if macdFast[1] < macdFast[2] and macdFast[2] < macdFast[3] then 
        DoShort()
    end
end

-- Use Donchian Channel to determine push direction
if (dcLower[1] < dcLower[2]) then
    pushDirection = -1
elseif (dcUpper[1] > dcUpper[2]) then
    pushDirection = 1
end

-- Save the value for next update
Save('pd', pushDirection)
