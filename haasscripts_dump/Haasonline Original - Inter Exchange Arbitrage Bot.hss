-- Inputfields
account = InputAccountMarket('Secondary')
target = Input('Trigger percentage', 0.5)
oneWay = Input('One way', false, 'When enabled, the script will only buy on the main account and sell on the secondairy.')

maximumAmount = Input('Maximum position size', 10)

-- Obtain the price information of both markets
buyPriceA = CurrentPrice()[6]
sellPriceA = CurrentPrice(account)[7]

buyPriceB = CurrentPrice(account)[6]
sellPriceB = CurrentPrice()[7]

-- Calculate the price difference
deltaRouteA = Delta(buyPriceA, sellPriceA)
deltaRouteB = Delta(buyPriceB, sellPriceB)

-- Draw some lines
Plot(1, 'Delta A', deltaRouteA, Yellow) 
if oneWay == false then
	Plot(1, 'Delta B', deltaRouteB, White)
end
PlotHorizontalLine(1, 'Target', Green, target, Dotted)

-- Make sure both markets are spot
if MarketType() != SpotTrading or MarketType(account) != SpotTrading then
	LogError('IEAB only works on spot accounts. One or both markets are not set on spot.')
	return
end

if IsTradeAmountEnough('', buyPriceA, TradeAmount()) == false then
	LogError('Trade amount is to low for the main market')
	return
end

if IsTradeAmountEnough(account, buyPriceB, TradeAmount()) == false then
	LogError('Trade amount is to low for the second market')
	return
end

-- ===========================================
-- Check Order

function CheckOrder(orderId) 
	
	if orderId != "" then
		if IsOrderOpen(orderId) then
			-- Order is still open. Wait.
		
		elseif IsOrderFilled(orderId) then
			-- Order is filled. Reset orderId.
			orderId = ""
		else
			-- Order is cancelled/failed/rejected.
			-- Execute remaing amount again.
			orderId = PlaceCancelledOrder(orderId)
		end
	end

	-- Save orderId
	return orderId
end


-- ===========================================
-- Logic

positionId1 = Load('positionId1', NewGuid())
positionId2 = Load('positionId2', NewGuid())

orderId1 = CheckOrder(Load('orderId1', ''))
orderId2 = CheckOrder(Load('orderId2', ''))

if IsAnyOrderOpen() == false then

	if maximumAmount > 0 then
		-- There is a maximum position size. 
		-- Make sure they are not bigger or smaller then this value.
		if GetPositionAmount(positionId1) + TradeAmount() >= maximumAmount 
		or GetPositionAmount(positionId1) + TradeAmount() >= maximumAmount then
			Log('Maximum trade amount reached. Deactivating!')
			DeactivateBot()
			return
		end
	end

	if deltaRouteA > target then
		-- Route A is above the target percentage.
		-- Do a wallet check and adjust targetAmounts.

		hasSufficientFunds = 
			WalletCheck("", QuoteCurrency(), TradeAmount() * buyPriceA) and
			WalletCheck(account, BaseCurrency(account), TradeAmount())

		if hasSufficientFunds then
			orderId1 = PlaceBuyOrder(buyPriceA, TradeAmount(), '', MarketOrderType, '', positionId1)
			orderId2 = PlaceSellOrder(sellPriceA, TradeAmount(), account, MarketOrderType, '', positionId2)
		else 
			LogWalletError('Insufficient funds.')
		end

	elseif oneWay == false and deltaRouteB > target then
		-- Route B is above the target percentage.
		-- Do a wallet check and adjust targetAmounts.

		hasSufficientFunds = 
			WalletCheck("", BaseCurrency(), TradeAmount()) and
			WalletCheck(account, QuoteCurrency(account), TradeAmount() * buyPriceB)

		if hasSufficientFunds then
			orderId1 = PlaceSellOrder(sellPriceB, TradeAmount(), '', MarketOrderType, '', positionId1)
			orderId2 = PlaceBuyOrder(buyPriceB, TradeAmount(), account, MarketOrderType, '', positionId2)
		else 
			LogWalletError('Insufficient funds.')
		end
	end
end

-- ===========================================
-- Log own profit calculation
profit = GetPositionProfit(positionId1) + GetPositionProfit(positionId2)
Log('Estimated profit: '..profit)

PlotDoubleColor(Plot(2, 'Profit', profit, Green), 0, Red)

-- ===========================================
-- Save values for future use
Save('positionId1', positionId1)
Save('positionId2', positionId2)
Save('orderId1', orderId1)
Save('orderId2', orderId2)
