name: Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ai-trading-interface/package-lock.json
    
    - name: Install dependencies
      working-directory: ai-trading-interface
      run: npm ci
    
    - name: Run linting
      working-directory: ai-trading-interface
      run: npm run lint
    
    - name: Run type checking
      working-directory: ai-trading-interface
      run: npm run type-check
    
    - name: Run tests
      working-directory: ai-trading-interface
      run: npm run test:all

  build:
    needs: test
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    
    runs-on: ${{ matrix.platform }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ai-trading-interface/package-lock.json
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './ai-trading-interface/src-tauri -> target'
    
    - name: Install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-20.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
    
    - name: Install frontend dependencies
      working-directory: ai-trading-interface
      run: npm ci
    
    - name: Build frontend
      working-directory: ai-trading-interface
      run: npm run build:prod
    
    - name: Build Tauri app
      working-directory: ai-trading-interface
      run: npm run tauri:build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ matrix.platform }}
        path: |
          ai-trading-interface/src-tauri/target/release/bundle/*/*
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ai-trading-interface/package-lock.json
    
    - name: Install dependencies
      working-directory: ai-trading-interface
      run: npm ci
    
    - name: Create distribution packages
      working-directory: ai-trading-interface
      run: |
        mkdir -p src-tauri/target/release/bundle
        cp -r ../artifacts/release-*/* src-tauri/target/release/bundle/
        node scripts/distribution.js --environment production --verbose
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ai-trading-interface/dist/releases/*
        body_path: ai-trading-interface/dist/releases/release-notes.md
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ai-trading-interface/package-lock.json
    
    - name: Install dependencies
      working-directory: ai-trading-interface
      run: npm ci
    
    - name: Run security audit
      working-directory: ai-trading-interface
      run: npm audit --audit-level moderate
    
    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        languages: javascript