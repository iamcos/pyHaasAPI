# Account Selection

## Overview
Selecting the correct account is crucial for executing trades and backtests.

## Account Retrieval
Retrieve all available accounts for the authenticated user:

```python
from pyHaasAPI.api import get_accounts
accounts = get_accounts(auth_executor)
for account in accounts:
    print(f"Account ID: {account.account_id}, Name: {account.name}")
```

## Account Filtering
Filter accounts based on specific criteria, such as account type or status:

```python
simulated_accounts = [acc for acc in accounts if acc.is_simulated]
print(f"Found {len(simulated_accounts)} simulated accounts")
```

## Account Selection in Workflows
- Many scripts (e.g., `examples/flexible_lab_workflow.py`) allow you to specify an account with `--account-id`.
- If not specified, the first available account is used by default.
- Use `--list-accounts` to see all available accounts.

## Best Practices
1. Validate account status before use
2. Use descriptive account names
3. Regularly review account permissions
4. Handle account selection errors
5. Log account usage for auditing

- See [docs/lab_workflows.md](./lab_workflows.md) for account selection in the context of lab and bot workflows. 