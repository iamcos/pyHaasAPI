[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-tui-client"
version = "0.1.0"
description = "Terminal User Interface for HaasOnline MCP Server"
authors = [
    {name = "HaasOnline Development Team", email = "dev@haasonline.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = ["trading", "haasonline", "mcp", "tui", "terminal"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Terminals",
    "Environment :: Console",
]

# Core dependencies
dependencies = [
    "textual>=0.48.0",
    "aiohttp>=3.8.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "keyring>=24.0.0",
    "python-dotenv>=1.0.0",
    "asyncio-mqtt>=0.13.0",
    "websockets>=11.0.0",
    "click>=8.0.0",
    "toml>=0.10.0",
    "cryptography>=41.0.0",
]

# Development dependencies
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0",
    "coverage>=7.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "coverage>=7.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/haasonline/mcp-tui-client"
Documentation = "https://mcp-tui-client.readthedocs.io/"
Repository = "https://github.com/haasonline/mcp-tui-client.git"
"Bug Tracker" = "https://github.com/haasonline/mcp-tui-client/issues"

[project.scripts]
mcp-tui = "mcp_tui_client.cli:main"
mcp-tui-client = "mcp_tui_client.cli:main"
mcp-tui-tools = "mcp_tui_client.cli:cli"

[tool.setuptools.packages.find]
where = ["."]
include = ["mcp_tui_client*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
mcp_tui_client = ["*.css", "*.json", "*.yaml", "*.yml"]

# Testing configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=mcp_tui_client",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests that require MCP server",
    "slow: Slow running tests",
    "network: Tests that require network access",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
asyncio_mode = "auto"

# Code formatting with Black
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Import sorting with isort
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcp_tui_client"]
known_third_party = ["textual", "rich", "pydantic", "aiohttp"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# Type checking with mypy
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "textual.*",
    "keyring.*",
    "asyncio_mqtt.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["mcp_tui_client"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"